import{d as m,e as p,__tla as w}from"../../../../../module-D_6o7GTg.js";import{b as _,__tla as b}from"../../../../../build-BhUYuKC2.js";import{r as h}from"../../../../../resolve-config-xoBbP6QF.js";import{__tla as v}from"../../../../../monaco-editor-00CT0F_7.min.js";import{__tla as g}from"../../../../../index-MUO2ju4c.min.js";import"../../../../../didyoumean-DsuBqNMC.min.js";Promise.all([(()=>{try{return w}catch{}})(),(()=>{try{return b}catch{}})(),(()=>{try{return v}catch{}})(),(()=>{try{return g}catch{}})()]).then(async()=>{let n,c=null,o=new Set;const s=document.querySelector('script[type="text/tailwindcss"]');s&&(f(),new MutationObserver(async()=>{await r()}).observe(s,{characterData:!0,subtree:!0}));async function r(){const t=m(s.textContent);c=await h(t),await i()}new MutationObserver(async t=>{const e=["STYLE","SCRIPT"];let a=!0;for(let d of t){const l=d.target;l.nodeType===1&&e.includes(l.tagName)&&(a=!1);for(let y of d.addedNodes){const u=y;u.nodeType===1&&e.includes(u.tagName)&&(a=!1)}}a&&await i()}).observe(document.documentElement,{attributes:!0,attributeFilter:["class"],subtree:!0,childList:!0});async function i(){const t=new Set;if(document.querySelectorAll("[class]").forEach(e=>{e.classList.forEach(a=>t.add(a))}),document.body&&t.size>0){if((!n||!n.isConnected)&&(n=document.createElement("style"),document.head.append(n)),o.size===t.size){let e=!1;for(let a of t)if(!o.has(a)){e=!0;break}if(!e)return}o=t,n.textContent=await _({entrypoint:{css:"/main.css",config:"/tailwind.config.js"},contents:Array.from(t),volume:m(s.textContent),options:{resolvedConfig:c}})}}await r();function f(){new BroadcastChannel("windpress").addEventListener("message",async t=>{const e=t.data;e.source==="windpress/dashboard"&&e.target==="windpress/observer"&&e.task==="windpress.code-editor.saved"&&(s.textContent=p(JSON.stringify(e.payload.volume)),await r())})}});
