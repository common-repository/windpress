import{_ as h,a as x,b as g}from"./index-CKpsDP-T.min.js";import{b as v,l as w,y as p}from"./module-D_6o7GTg.js";async function i({entrypoint:t="/main.css",volume:e={},...n}={}){n={entrypoint:t,volume:e,...n};const s=await v({entrypoint:n.entrypoint,volume:n.volume});return h(s.css,{...n,loadModule:async(a,l,r)=>w(a,l,r,n.volume)})}function k(t){return t.getClassList().map(e=>({kind:"utility",selector:e[0]}))}function E(t){return t.getVariants().map(e=>({kind:"variant",selector:e.name}))}function b(){return[{kind:"utility",selector:"flex"}]}function C(t){return t.sort(([,e],[,n])=>e===n?0:e===null?-1:n===null?1:f(e-n)).map(([e])=>e)}function f(t){return t>0n?1:t===0n?0:-1}async function I(t={}){let e=t.theme?t:await i(t);return Array.from(e.theme.entries()).map((n,s)=>{const a=n[0];let l=!1,r=null;const o=n[1].value;return typeof o=="string"&&o.includes("rem")&&(r=`${parseFloat(o)*16}px`,l=!0),{key:a,value:l?r:o,index:s}})}async function W(t={},e){let n=t.theme?t:await i(t);return C(n.getClassOrder(e))}function y(t,e){if(!(t!=null&&t.includes("rem")))return t;let n=[];p(t).walk(a=>{if(a.type!=="word")return!0;let l=p.unit(a.value);if(!l||l.unit!=="rem"&&l.unit!=="rem;")return!1;let r=` /* ${parseFloat(l.number)*e}px */`;return n.push({content:r,sourceEndIndex:a.sourceEndIndex}),!1});let s=0;return n.forEach(a=>{t=t.slice(0,a.sourceEndIndex+s)+a.content+t.slice(a.sourceEndIndex+s),s+=a.content.length}),t}async function A(t={},e){let n=(t.theme?t:await i(t)).candidatesToCss(e);return n=n.map(s=>y(s,16)),n}async function F(t={}){let e=t.theme?t:await i(t);const n=k(e).concat(E(e).concat(b())),s=r=>r.selector!=="*",a=r=>{const o=x([r.selector],e).astNodes,d=o.length>0?o.reduce((u,m)=>u.concat(m.nodes),[]):[];let c=e.candidatesToCss([r.selector]).at(0);return c&&(c=c.replaceAll(/([0-9.]+)rem/g,(u,m)=>`${parseFloat(m)*16}px`)),c=c==null?void 0:c.replaceAll(/\\/g,""),{...r,declarations:d==null?void 0:d.filter(u=>u.kind==="declaration"),css:c}},l=(r,o)=>r.selector.startsWith("-")&&!o.selector.startsWith("-")?1:!r.selector.startsWith("-")&&o.selector.startsWith("-")?-1:g(r.selector,o.selector);return n.filter(s).map(a).sort(l)}export{F as a,f as b,A as c,y as d,I as g,i as l,W as s};
